<?php
defined('BASEPATH') or exit('No direct script access allowed');
include APPPATH . '/libraries/CommonTrait.php';

class SKController extends CI_Controller
{
    use CommonTrait;

    const AADHAAR_CONSENT_CONTENT = ' <p>I hereby give my consent for using my identity and address data received from e-KYC provider to generate and submit the electronic DSC application form to CA, creation of key pairs by ESP on my behalf, submission of certificate to CA for certification, one time creation of signature on the hash along with this request, deletion of key pairs after applyingsignature(s). I have noobjection in the use of my ID for authenticating myself with Aadhaar based authentication system for the purposes of availing of the eCabinet from Home & Political Department, Government of Assam. I understand that the Biometrics and/or OTP I provide for authentication shall be used only for authenticating my identity through the Aadhaar Authentication system, for obtaining my e-KYC through Aadhaar e-KYC service and for the issuance of Digital Signature Certificate (DSC) for this specific transaction and for no other purposes.For the creation of DSC, I understand that the options that I have chosen are the ones that shall be populated in the DSC generated by the CA and I provide my consent for the same. I also understand that the following fields in the DSC generated by the CA are mandatory and I give my consent for using the Aadhaar provided e-KYC information to populate the corresponding fields in the DSC.</p><p>Common Name (name as obtained from e-KYC), Unique Identifier (UID Token), Pseudonym (unique code sent by UIDAI in e-KYC response), State or Province (state as obtained from e-KYC), Postal Code (postal code as obtained from e-KYC)</p>';

    const AADHAAR_CONSENT_CHECKBOX_TEXT = 'I understand that Home & Political Department, Government of Assam shall ensure security and confidentiality of my personal identity data provided for the purpose of Aadhaar based authentication.';

    function __construct()
    {
        parent::__construct();
        $this->load->model('UserModel');
        $this->load->model('Chithamodel');
        $this->load->model('CommonModel');
        $this->load->model('MisModel');
        $this->load->model('LoginModel');
        $this->load->helper(array('form', 'url'));
        $this->load->library('form_validation');
        $this->load->helper('security');
        $this->load->helper('language');

        $district_code = $this->session->userdata('dist_code');
        if (in_array($district_code, BARAK_VALLEY)) {
            $this->lang->load("bengali", "bengali");
        } else {
            $this->lang->load("assamese", "assamese");
        }
    }
    public function index()
    {
        $this->dataswitch();
        $this->db->trans_begin();

        // Fetch session data
        $dist_code = $this->session->userdata('dist_code');
        $subdiv_code = $this->session->userdata('subdiv_code');
        $cir_code = $this->session->userdata('cir_code');

        $mouzas = $this->Chithamodel->mouzadetails($dist_code, $subdiv_code, $cir_code);

        // $villages = $this->Chithamodel->villagedetails($dist_code, $subdiv_code, $cir_code);
        // $villages = $this->randomizeDags($dist_code, $subdiv_code, $cir_code, $villages);

        if ($this->db->trans_status() == FALSE) {
            $this->db->trans_rollback();
            redirect(base_url('index.php/Login/dashboard'));
            exit();
        }

        $this->db->trans_commit();

        $data['mouzas'] = $mouzas;
        $data['enable_auto_esign'] = in_array($dist_code, AUTO_ESIGN_DISTRICTS);
        // $data['villages'] = $villages;
        // Load view with data
        $data['page_header'] = 'Chitha Verification';
        $data['ajax_url'] = base_url('index.php/verification/SKController/getDags');
        $data['_view'] = 'verification/sk/dashboard';
        $this->load->view('layout/layout', $data);
    }

    public function getLots()
    {
        if (empty($_POST) || !isset($_POST['mouza_pargona_code']) || $_POST['mouza_pargona_code'] == '') {
            echo json_encode([
                'status' => 'FAILED',
                'responseType' => 1,
                'msg' => 'Input Parameter not set'
            ]);
            exit();
        }
        $sessionData = $this->session->all_userdata();
        if (!$sessionData) {
            echo json_encode([
                'status' => 'FAILED',
                'responseType' => 1,
                'msg' => 'Session is destroyed. Please Login Again'
            ]);
            exit();
        }

        $dist_code = $this->session->userdata('dist_code');
        $subdiv_code = $this->session->userdata('subdiv_code');
        $cir_code = $this->session->userdata('cir_code');
        $mouza_pargona_code = $this->input->post('mouza_pargona_code');

        $this->dataswitch();

        $lots = $this->Chithamodel->lotdetails($dist_code, $subdiv_code, $cir_code, $mouza_pargona_code);

        echo json_encode([
            'status' => 'SUCCESS',
            'responseType' => 2,
            'msg' => '',
            'data' => $lots
        ]);
        exit();
    }

    public function getVillages()
    {
        if (empty($_POST) || !isset($_POST['mouza_pargona_code']) || $_POST['mouza_pargona_code'] == '' || !isset($_POST['lot_no']) || $_POST['lot_no'] == '') {
            echo json_encode([
                'status' => 'FAILED',
                'responseType' => 1,
                'msg' => 'Input Parameter not set'
            ]);
            exit();
        }
        $sessionData = $this->session->all_userdata();
        if (!$sessionData) {
            echo json_encode([
                'status' => 'FAILED',
                'responseType' => 1,
                'msg' => 'Session is destroyed. Please Login Again'
            ]);
            exit();
        }
        $dist_code = $this->session->userdata('dist_code');
        $subdiv_code = $this->session->userdata('subdiv_code');
        $cir_code = $this->session->userdata('cir_code');
        $mouza_pargona_code = $this->input->post('mouza_pargona_code');
        $lot_no = $this->input->post('lot_no');

        $this->dataswitch();

        $villages = $this->Chithamodel->villagedetails($dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no);
        $villages = $this->randomizeDags($dist_code, $subdiv_code, $cir_code, $villages);

        echo json_encode([
            'status' => 'SUCCESS',
            'responseType' => 2,
            'msg' => '',
            'data' => $villages
        ]);
        exit();
    }

    private function randomizeDags($dist_code, $subdiv_code, $cir_code, $villages)
    {
        // Here those villages will come in which LM perform e-sign. Now We have to filter each village in which 100% dags have signed by LM or not
        $filtered_villages = [];
        $user_code = $this->session->userdata('user_code');
        $user = $this->db->where('user_code', $user_code)->get('users')->row();

        if (count($villages)) {
            foreach ($villages as $village) {
                $conditions = [
                    'dist_code' => $dist_code,
                    'subdiv_code' => $subdiv_code,
                    'cir_code' => $cir_code,
                    'mouza_pargona_code' => $village['mouza_pargona_code'],
                    'lot_no' => $village['lot_no'],
                    'vill_townprt_code' => $village['vill_townprt_code'],
                ];
                $dags = $this->db->where($conditions)
                    ->get('chitha_basic')
                    ->result_array();

                $dags_count = count($dags);
                // $verified_dags_count = $this->db->where($conditions)
                //                                 ->get('verified_dags')
                //                                 ->num_rows();

                $limit = floor($dags_count * SK_E_SIGN_RANDOMIZE_PERCENTAGE / 100);
                if ($limit > 0) {
                    $alloted_dag = $this->db->where($conditions)
                        ->where([
                            // 'alloted_to' => $user_code,
                            'user_desig_code' => $user->user_desig_code
                        ])
                        ->get('alloted_dags')->row();

                    if (!$alloted_dag) {
                        array_push($filtered_villages, $village);
                        $randomKeys = array_rand($dags, $limit);

                        // Extract the values using the keys
                        $randomDags = array_map(function ($key) use ($dags) {
                            return $dags[$key];
                        }, $randomKeys);


                        foreach ($randomDags as $randomDag) {
                            $data = [
                                'verified_dags_id' => 0,
                                'dist_code' => $randomDag['dist_code'],
                                'subdiv_code' => $randomDag['subdiv_code'],
                                'cir_code' => $randomDag['cir_code'],
                                'mouza_pargona_code' => $randomDag['mouza_pargona_code'],
                                'lot_no' => $randomDag['lot_no'],
                                'vill_townprt_code' => $randomDag['vill_townprt_code'],
                                'dag_no' => $randomDag['dag_no'],
                                'uuid' => '',
                                'alloted_to' => $user_code,
                                'user_desig_code' => $user->user_desig_code,
                                'username' => $user->username,
                                'alloted_at' => date('Y-m-d H:i:s'),
                                'is_signed' => 0,
                            ];
                            $this->db->insert('alloted_dags', $data);
                        }
                    } else {
                        $has_dag_left = $this->db->where($conditions)
                            ->where([
                                // 'alloted_to' => $user_code,
                                'user_desig_code' => $user->user_desig_code,
                                'is_signed' => 0
                            ])
                            ->get('alloted_dags')->row();
                        if ($has_dag_left) {
                            array_push($filtered_villages, $village);
                        }
                    }
                }
            }
        }

        return $filtered_villages;
    }

    public function getDags()
    {
        $dist_code = $this->session->userdata('dist_code');
        $subdiv_code = $this->session->userdata('subdiv_code');
        $cir_code = $this->session->userdata('cir_code');
        $mouza_lot_village = $this->input->post('vill_townprt_code');
        if (empty($mouza_lot_village)) {
            echo json_encode(['data' => []]);
            exit;
        }
        $location_parts = explode('_', $mouza_lot_village);
        $mouza_pargona_code = $location_parts[0];
        $lot_no = $location_parts[1];
        $village = $location_parts[2];

        $this->dataswitch();

        $this->db->trans_begin();

        // Step 1: Get verified DAGs details
        $verifiedDags = $this->getVerifiedDagsDetails($dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no, $village);

        // For development purposes start
        if (DEVELOPMENT_MODE_STATUS == '1') {
            ini_set('memory_limit', '-1');
            ini_set('execution_limit', '-1');
            $this->generateAllSKSign($dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no, $village);
        }
        // For development purposes end


        // Step 2: Get details from chitha_basic for verified DAGs
        $lms_all = [];
        foreach ($verifiedDags as $recordMain) {
            // Fetch details from chitha_basic based on verified DAGs
            $query = $this->makeQuery($dist_code, $subdiv_code, $cir_code, $recordMain['mouza_pargona_code'], $recordMain['lot_no'], $village, $recordMain['dag_no']);
            $records = $query->result();

            foreach ($records as $record) {
                $lm_s = [];
                $lm_s['dag_no'] = $record->dag_no;
                $lm_s['patta_no'] = $record->patta_no;
                $lm_s['dag_area'] = $record->bigha . '-' . $record->katha . '-' . $record->lessa;
                $lm_s['patta_type_code'] = $record->patta_type_code;
                $lm_s['patta_type'] = $record->patta_type;
                $lm_s['land_class'] = $record->land_type;

                $actionLink = base_url('index.php/verification/SKController/viewDetails?' .
                    'dist=' . $dist_code .
                    '&subdiv=' . $subdiv_code .
                    '&cir=' . $cir_code .
                    '&mouza=' . $recordMain['mouza_pargona_code'] .
                    '&lot=' . $recordMain['lot_no'] .
                    '&vill=' . $village .
                    '&dag=' . $record->dag_no .
                    '&patta=' . $record->patta_no .
                    '&type=' . $record->patta_type_code);

                $lm_s['action'] = "<a href='$actionLink'><button type='button' class='btn btn-info btn-sm'>View & Verify</button></a>";

                $lms_all[] = $lm_s;
            }
        }

        if ($this->db->trans_status() == FALSE) {
            $this->db->trans_rollback();
        } else {
            $this->db->trans_commit();
        }

        echo json_encode(['data' => $lms_all]);
        exit();
    }

    private function getVerifiedDagsDetails($dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no, $village)
    {
        $user_code = $this->session->userdata('user_code');
        $query = $this->db->query("
                                    SELECT distinct dist_code, subdiv_code, cir_code, mouza_pargona_code, lot_no, dag_no 
                                    FROM alloted_dags 
                                    WHERE dist_code = '$dist_code' 
                                        AND subdiv_code = '$subdiv_code' 
                                        AND cir_code = '$cir_code'
                                        AND mouza_pargona_code = '$mouza_pargona_code'
                                        AND lot_no = '$lot_no'
                                        AND vill_townprt_code = '$village'
                                        AND user_desig_code = 'SK'
                                        AND is_signed = 0
                                ");
        // $query = $this->db->query("
        //     SELECT distinct dist_code, subdiv_code, cir_code, mouza_pargona_code, lot_no, dag_no 
        //     FROM verified_dags 
        //     WHERE dist_code = '$dist_code' 
        //         AND subdiv_code = '$subdiv_code' 
        //         AND cir_code = '$cir_code'
        //         AND mouza_pargona_code !='00'
        //         AND lot_no!='00'
        //         AND vill_townprt_code = '$village' 
        //         AND (signed_by_lm IS NOT NULL OR signed_by_lm != '') 
        //         AND date_of_sign_lm IS NOT NULL
        //         AND (signed_by_sk IS NULL OR signed_by_sk = '')
        // "); 

        return $query->result_array();
    }

    public function autoSignChitha()
    {
        session_write_close();
        $dist_code = $this->session->userdata('dist_code');
        $subdiv_code = $this->session->userdata('subdiv_code');
        $cir_code = $this->session->userdata('cir_code');
        $mouza_lot_village = $this->input->post('vill_townprt_code');
        if (!in_array($dist_code, AUTO_ESIGN_DISTRICTS)) {
            return response_json(['success' => false, 'message' => 'You are not authorized to perform this.']);
        }

        if (empty($mouza_lot_village)) {
            return response_json(['success' => false, 'message' => 'Please choose village first.']);
        }
        list($mouza_pargona_code, $lot_no, $village) = explode('_', $mouza_lot_village);

        $folder_path = AUTO_ESIGN_TEMP_FOLDER_LOCATION;
        if (!file_exists($folder_path)) {
            mkdir($folder_path, 0777, true);
        }

        $this->dataswitch();
        $this->db->trans_begin();
        $this->generateAllSKSign($dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no, $village);
        if ($this->db->trans_status() == FALSE) {
            $this->db->trans_rollback();
        } else {
            $this->db->trans_commit();
        }

        return response_json(['success' => true, 'message' => 'You can sign the certificate']);
    }

    public function showprogress()
    {
        session_write_close();
        $dist_code = $this->session->userdata('dist_code');
        $subdiv_code = $this->session->userdata('subdiv_code');
        $cir_code = $this->session->userdata('cir_code');
        $mouza_lot_village = $this->input->post('vill_townprt_code');
        $user_code = $this->session->userdata('user_code');
        $user_desig_code = $this->session->userdata('user_desig_code');
        list($mouza_pargona_code, $lot_no, $village) = explode('_', $mouza_lot_village);

        $this->dataswitch();
        $conditions = [
            'dist_code' => $dist_code,
            'subdiv_code' => $subdiv_code,
            'cir_code' => $cir_code,
            'mouza_pargona_code' => $mouza_pargona_code,
            'lot_no' => $lot_no,
            'vill_townprt_code' => $village,
            // 'alloted_to' => $user_code,
            'user_desig_code' => $user_desig_code
        ];

        $all_dag_count = $this->db->where($conditions)->where('is_signed', 0)->from('alloted_dags')->count_all_results();
        $signed_dag_count = $this->db->where($conditions)->where('is_signed', 1)->from('alloted_dags')->count_all_results();
        $all_dag_count = $all_dag_count ? $all_dag_count : 0;
        $signed_dag_count = $signed_dag_count ? $signed_dag_count : 0;
        $count_data = [
            'all_dag_count' => $all_dag_count,
            'signed_dag_count' => $signed_dag_count,
        ];
        $autoEfilePath = AUTO_ESIGN_TEMP_FOLDER_LOCATION . '/esign_progress_data_' . $village . '.txt';
        $file_content = file_get_contents($autoEfilePath);
        $file_content = json_decode($file_content);
        $all_dag_count = $file_content->all_dag_count;
        $signed_dag_count = $file_content->signed_dag_count;

        $progress_percent = $all_dag_count > 0 ? floor(($signed_dag_count / $all_dag_count) * 100) : 0;

        return response_json(['progress_percent' => $progress_percent, 'signed_dag_count' => $signed_dag_count, 'all_dag_count' => $all_dag_count]);
    }

    private function generateAllSKSign($dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no, $village)
    {
        ini_set('memory_limit', '-1');
        $user_code = $this->session->userdata('user_code');
        $user_desig_code = $this->session->userdata('user_desig_code');
        $conditions = [
            'dist_code' => $dist_code,
            'subdiv_code' => $subdiv_code,
            'cir_code' => $cir_code,
            'mouza_pargona_code' => $mouza_pargona_code,
            'lot_no' => $lot_no,
            'vill_townprt_code' => $village,
        ];

        $alloted_dags = $this->db->where($conditions)
            // ->where('alloted_to', $user_code)
            ->where('user_desig_code', $user_desig_code)
            ->where('is_signed', 0)
            ->get('alloted_dags')
            ->result_array();

        $autoEfilePath = AUTO_ESIGN_TEMP_FOLDER_LOCATION . '/esign_progress_data_' . $village . '.txt';

        if (count($alloted_dags) > 0) {
            $all_dag_count = count($alloted_dags);
            $signed_dag_count = 0;
            foreach ($alloted_dags as $alloted_dag) {
                $signed_dag_count++;
                $count_data = [
                    'all_dag_count' => $all_dag_count,
                    'signed_dag_count' => $signed_dag_count,
                ];

                file_put_contents($autoEfilePath, json_encode($count_data));

                $vill_townprt_code = $village;
                $dag_no = $alloted_dag['dag_no'];

                // $this->db->where('id', $alloted_dag['verified_dags_id'])
                //         ->update('verified_dags', [
                //                                     'signed_by_sk' => $user_code,
                //                                     'date_of_sign_sk' => date('Y-m-d H:i:s')
                //                                 ]);

                // ###########  GENERATE PDF START ##############
                $dist_name = $this->utilityclass->getDistrictName($dist_code);
                $subdiv_name = $this->utilityclass->getSubDivName($dist_code, $subdiv_code);
                $cir_name = $this->utilityclass->getCircleName($dist_code, $subdiv_code, $cir_code);
                $mouza_pargona_name = $this->utilityclass->getMouzaName($dist_code, $subdiv_code, $cir_code, $mouza_pargona_code);
                $lot_name = $this->utilityclass->getLotLocationName($dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no);
                $vill_townprt_name = $this->utilityclass->getVillageName($dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no, $vill_townprt_code);

                // $uuid = $this->utilityclass->getUuid($dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no, $vill_townprt_code);

                $dag_no_query = $this->db->query("SELECT dag_no_int, patta_type_code FROM chitha_basic WHERE dist_code=? AND subdiv_code=? AND cir_code=? AND mouza_pargona_code=? AND lot_no=? AND vill_townprt_code=? AND dag_no=?", [$dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no, $vill_townprt_code, $dag_no])->row();

                $dag_no_int = $dag_no_query->dag_no_int;
                $patta_type_code = $dag_no_query->patta_type_code;

                $secondSelection = array('patta_code' => $patta_type_code, 'dag_no_lower' => $dag_no_int, 'dag_no_upper' => $dag_no_int);
                $data['location'] = array('dist' => trim($dist_name), 'sub' => trim($subdiv_name), 'cir' => $cir_name, 'mouza' => $mouza_pargona_name, 'lot' => $lot_name, 'vill' => $vill_townprt_name);
                $this->load->model('chitha/DharChithaModel');
                $pattatype['chithaPattatypeinfo'] = $this->DharChithaModel->getpattatype($patta_type_code);
                $chithainfo1['data'] = $this->DharChithaModel->getchithaDetailsALL($dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no, $vill_townprt_code, $dag_no_int, $dag_no_int);

                $maindataforchitha = array_merge($data, $secondSelection, $chithainfo1, $pattatype);

                $maindataforchitha['single_dag'] = '1';
                $maindataforchitha['uuid'] = $uuid = $this->db->query("select uuid from location where dist_code=? and subdiv_code=? and cir_code=? and mouza_pargona_code=? and lot_no=? and vill_townprt_code=?", [$dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no, $vill_townprt_code])->row();

                $this->load->helper('language');

                $district_code = $this->session->userdata('dist_code');
                if (in_array($district_code, BARAK_VALLEY)) {
                    $this->lang->load("bengali", "bengali");
                } else {
                    $this->lang->load("assamese", "assamese");
                }
                $maindataforchitha['dag_no_original'] = [];
                foreach ($maindataforchitha['data'] as $key => $value) {
                    $maindataforchitha['dag_no_original'][] = $value['dag_no'];
                }

                $maindataforchitha['uuid'] = ['uuid' => $uuid->uuid];

                $content = $this->load->view('chitha_report/setChithaReport', $maindataforchitha, true);

                ini_set("pcre.backtrack_limit", "500000000");
                ini_set('max_execution_time', '-1');
                include 'vendor/mpdf/vendor/autoload.php';
                $mpdf = new \Mpdf\Mpdf([
                    'default_font_size' => 9,
                    'default_font' => 'dejavusans',
                    'orientation' => 'P',
                    'format' => 'A4',
                ]);

                $sub_folder = $dist_code . '_' . $subdiv_code . '_' . $cir_code . '_' . $mouza_pargona_code . '_' . $lot_no . '_' . $vill_townprt_code;
                $file_name = $dist_code . '_' . $subdiv_code . '_' . $cir_code . '_' . $mouza_pargona_code . '_' . $lot_no . '_' . $vill_townprt_code . '_' . $dag_no_int;

                // mkdir(BARAK_VALLEY_CHITHA_PDF_DIR . $sub_folder, 0777, true);
                if ((!file_exists(BARAK_VALLEY_CHITHA_FRESH_PDF_DIR . $sub_folder) == true)) {
                    mkdir(BARAK_VALLEY_CHITHA_FRESH_PDF_DIR . $sub_folder, 0777, true);
                }


                // $mpdf->simpleTables = true;
                // $mpdf->packTableData = true;
                $mpdf->autoScriptToLang = true;
                $mpdf->autoLangToFont = true;
                $mpdf->shrink_tables_to_fit = 1;
                $mpdf->use_kwt = true;
                $mpdf->writeHTML($content);
                // header('Content-type: application/pdf');
                ob_clean();
                // $mpdf->Output(BARAK_VALLEY_CHITHA_PDF_DIR . $sub_folder . '/' . $file_name . '.pdf', 'F');
                $mpdf->Output(BARAK_VALLEY_CHITHA_FRESH_PDF_DIR . $sub_folder . '/' . $file_name . '.pdf', 'F');

                if (file_exists(BARAK_VALLEY_CHITHA_FRESH_PDF_DIR . $sub_folder . '/' . $file_name . '.pdf')) {
                    $pdfData = file_get_contents(BARAK_VALLEY_CHITHA_FRESH_PDF_DIR . $sub_folder . '/' . $file_name . '.pdf');
                    // $this->db->where(['dist_code'=>$dist_code, 'subdiv_code'=>$subdiv_code, 'cir_code'=>$cir_code, 'mouza_pargona_code'=>$mouza_pargona_code, 'lot_no'=>$lot_no, 'vill_townprt_code'=>$vill_townprt_code, 'dag_no'=>$dag_no]);
                    $check = $this->db->query('SELECT * FROM verified_dags WHERE dist_code=? AND subdiv_code=? AND cir_code=? AND mouza_pargona_code=? AND lot_no=? AND vill_townprt_code=? AND dag_no=?', [$dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no, $vill_townprt_code, $dag_no])->row();
                    if (empty($check)) {
                        $consentsArr = [
                            'LM' => [],
                            'SK' => [
                                'consent_content' => self::AADHAAR_CONSENT_CONTENT,
                                'consent_checkbox_text' => self::AADHAAR_CONSENT_CHECKBOX_TEXT,
                            ],
                            'CO' => [],
                            'ADC' => [],
                            'DC' => [],
                        ];
                        //insert
                        $insertData = [
                            'dist_code' => $dist_code,
                            'subdiv_code' => $subdiv_code,
                            'cir_code' => $cir_code,
                            'mouza_pargona_code' => $mouza_pargona_code,
                            'lot_no' => $lot_no,
                            'vill_townprt_code' => $vill_townprt_code,
                            'dag_no' => $dag_no,
                            'uuid' => $uuid->uuid,
                            'signed_by_lm' => 'NA',
                            'date_of_sign_lm' => date('Y-m-d H:i:s'),
                            'signed_by_sk' => $user_code,
                            'date_of_sign_sk' => date('Y-m-d H:i:s'),
                            'signed_doc' => ($sub_folder . '/' . $file_name . '.pdf'),
                            'consents' => json_encode($consentsArr),
                            'token' => json_encode(['LM' => '', 'SK' => '', 'CO' => '', 'ADC' => '', 'DC' => '']),
                        ];
                        $status = $this->db->insert('verified_dags', $insertData);

                        $verified_dags_id = $this->db->insert_id();
                        $this->db->where('id', $alloted_dag['id'])->update('alloted_dags', ['verified_dags_id' => $verified_dags_id, 'uuid' => $uuid->uuid]);
                    } else {
                        //update
                        $existing_consent = json_decode($check->consents);
                        $existing_consent = (array) $existing_consent;
                        // $existing_consent['LM'] = [
                        //     'consent_content' => self::AADHAAR_CONSENT_CONTENT,
                        //     'consent_checkbox_text' => self::AADHAAR_CONSENT_CHECKBOX_TEXT,
                        // ];
                        $updateData = [
                            // 'uuid'=>$uuid->uuid,
                            'signed_doc' => ($sub_folder . '/' . $file_name . '.pdf'),
                            'consents' => json_encode($existing_consent)
                        ];
                        $this->db->where(['dist_code' => $dist_code, 'subdiv_code' => $subdiv_code, 'cir_code' => $cir_code, 'mouza_pargona_code' => $mouza_pargona_code, 'lot_no' => $lot_no, 'vill_townprt_code' => $vill_townprt_code, 'dag_no' => $dag_no]);
                        $status = $this->db->update('verified_dags', $updateData);
                    }
                }
                // ###########  GENERATE PDF END ##############


                $this->db->where('id', $alloted_dag['id'])
                    ->where('user_desig_code', $user_desig_code)
                    ->update('alloted_dags', [
                        'is_signed' => 1
                    ]);
            }
        }
    }

    public function makeQuery($dist_code, $subdiv_code, $cir_code, $mouza_code, $lot_no, $village, $dag_no)
    {
        $sql = "SELECT 
            cb.dag_no AS dag_no,
            cb.patta_no AS patta_no,
            cb.dag_area_b AS bigha,
            cb.dag_area_k AS katha,
            cb.dag_area_lc AS lessa,
            cb.patta_type_code AS patta_type_code,
            t1.patta_type AS patta_type,
            t2.land_type AS land_type
        FROM chitha_basic cb 
        JOIN patta_code t1 ON cb.patta_type_code = t1.type_code
        JOIN landclass_code t2 ON cb.land_class_code = t2.class_code
        WHERE 
            cb.dist_code = '$dist_code' 
            AND cb.subdiv_code = '$subdiv_code' 
            AND cb.cir_code = '$cir_code' 
            AND cb.mouza_pargona_code = '$mouza_code' 
            AND cb.lot_no = '$lot_no' 
            AND cb.vill_townprt_code = '$village' 
            AND cb.dag_no = '$dag_no'
        ORDER BY cb.dag_no ASC";

        return $this->db->query($sql);
    }

    public function viewDetails()
    {
        $formData = array(
            'dist_code'   => $this->input->get('dist'),
            'subdiv_code' => $this->input->get('subdiv'),
            'cir_code'    => $this->input->get('cir'),
            'mouza_pargona_code' => $this->input->get('mouza'),
            'lot_no' => $this->input->get('lot'),
            'vill_townprt_code' => $this->input->get('vill'),
            'dag_no' => $this->input->get('dag'),
            'patta_no' => $this->input->get('patta'),
            'patta_type_code' => $this->input->get('type'),
        );

        $data['dist_code'] = $dist_code = $formData['dist_code'];
        $data['subdiv_code'] = $subdiv_code = $formData['subdiv_code'];
        $data['circle_code'] = $circle_code = $formData['cir_code'];
        $data['mouza_code'] = $mouza_code = $formData['mouza_pargona_code'];
        $data['lot_no'] = $lot_no = $formData['lot_no'];
        $data['vill_code'] = $vill_code = $formData['vill_townprt_code'];
        $data['dag_no'] = $dag_no = $formData['dag_no'];
        $data['patta_no'] = $patta_no = $formData['patta_no'];
        $data['patta_type_code'] =  $patta_type_code = $formData['patta_type_code'];

        $this->dataswitch();
        $sessionDist = $this->session->userdata('dist_code');
        $sessionSDiv = $this->session->userdata('subdiv_code');
        $sessionCir = $this->session->userdata('cir_code');


        if ($sessionDist != $dist_code || $sessionSDiv != $subdiv_code || $sessionCir != $circle_code) {
            $this->session->set_flashdata('message', "You are not allowed to access the page !!");
            redirect(base_url() . "index.php/verification/SKController/index");
        }

        $checkIfDagAlreadyVerified = $this->db->query("SELECT * FROM verified_dags WHERE dist_code=? AND subdiv_code=? AND cir_code=? AND mouza_pargona_code=? AND lot_no=? AND vill_townprt_code=? AND dag_no=? AND (signed_by_lm IS NOT NULL AND signed_by_lm != '') AND (signed_by_sk IS NOT NULL AND signed_by_sk != '')", [$dist_code, $subdiv_code, $circle_code, $mouza_code, $lot_no, $vill_code, $dag_no])->row();

        if (!empty($checkIfDagAlreadyVerified)) {
            $this->session->set_flashdata('message', "Dag Already Verified !!");
            redirect(base_url() . "index.php/verification/SKController/index");
            exit();
        }

        $checkIfRecordExistinChithaBasic = $this->Chithamodel->checkIfRecordExistinChithaBasic($formData);
        if ($checkIfRecordExistinChithaBasic) {
            $data['page_header'] = 'View Dag Details';
            $data['base'] = $this->config->item('base_url');
            $districtdata = $this->MisModel->getDistrictName($dist_code);
            $subdivdata = $this->MisModel->getSubDivName($dist_code, $subdiv_code);
            $circledata = $this->MisModel->getCircleName($dist_code, $subdiv_code, $circle_code);
            $mouzadata = $this->MisModel->getMouzaName($dist_code, $subdiv_code, $circle_code, $mouza_code);
            $lotdata = $this->MisModel->getLotName($dist_code, $subdiv_code, $circle_code, $mouza_code, $lot_no);
            $villagedata = $this->MisModel->getVillageName($dist_code, $subdiv_code, $circle_code, $mouza_code, $lot_no, $vill_code);

            $data['namedata'] = array_merge($districtdata, $subdivdata, $circledata, $mouzadata, $lotdata, $villagedata);

            $data['record'] = $this->db->query(
                "SELECT cb.dag_no, cb.patta_no, cb.dag_area_b, cb.dag_area_k, cb.dag_area_lc, cb.dag_area_g, cb.dag_area_are, cb.dag_revenue, cb.dag_local_tax, t1.patta_type, t2.land_type 
                                            FROM chitha_basic cb 
                                            JOIN patta_code t1 ON cb.patta_type_code = t1.type_code 
                                            JOIN landclass_code t2 ON cb.land_class_code = t2.class_code 
                                            WHERE cb.dist_code = ? 
                                            AND cb.subdiv_code = ? 
                                            AND cb.cir_code = ? 
                                            AND cb.mouza_pargona_code = ? 
                                            AND cb.lot_no = ? 
                                            AND cb.vill_townprt_code = ? 
                                            AND cb.dag_no = ?",
                [$dist_code, $subdiv_code, $circle_code, $mouza_code, $lot_no, $vill_code, $dag_no]
            )->result();

            $sql = "SELECT cp.pdar_id, cp.pdar_name, cp.pdar_father, cdp.dag_por_b,cdp.dag_por_k,cdp.dag_por_lc,cdp.dag_por_g,cdp.pdar_land_acre 
                FROM chitha_pattadar cp 
                JOIN chitha_dag_pattadar cdp ON cp.dist_code = cdp.dist_code 
                AND cp.subdiv_code = cdp.subdiv_code 
                AND cp.cir_code = cdp.cir_code 
                AND cp.mouza_pargona_code = cdp.mouza_pargona_code 
                AND cp.lot_no = cdp.lot_no 
                AND cp.vill_townprt_code = cdp.vill_townprt_code 
                AND cp.patta_no = cdp.patta_no 
                AND cp.patta_type_code = cdp.patta_type_code 
                AND cp.pdar_id = cdp.pdar_id 
                WHERE cp.dist_code = ? 
                AND cp.subdiv_code = ? 
                AND cp.cir_code = ? 
                AND cp.mouza_pargona_code = ? 
                AND cp.lot_no = ? 
                AND cp.vill_townprt_code = ? 
                AND cp.patta_no = ? 
                AND cp.patta_type_code = ? 
                AND cdp.dag_no = ? 
                ORDER BY cp.pdar_id ASC";

            $data['pattadars'] = $this->db->query($sql, [$dist_code, $subdiv_code, $circle_code, $mouza_code, $lot_no, $vill_code, $patta_no, $patta_type_code, $dag_no])->result();

            $data['tenants'] = $this->db->query(
                "SELECT ct.tenant_name, ct.tenants_father, ct.khatian_no,ct.tenant_id, tt.tenant_type, ct.tenant_id 
                                             FROM chitha_tenant ct 
                                             JOIN tenant_type tt ON ct.type_of_tenant = tt.type_code 
                                             WHERE ct.dist_code = ? 
                                             AND ct.subdiv_code = ? 
                                             AND ct.cir_code = ? 
                                             AND ct.mouza_pargona_code = ? 
                                             AND ct.lot_no = ? 
                                             AND ct.vill_townprt_code = ? 
                                             AND ct.dag_no = ?",
                [$dist_code, $subdiv_code, $circle_code, $mouza_code, $lot_no, $vill_code, $dag_no]
            )->result();
            $data['tenant_types'] = $this->db->query("SELECT * FROM tenant_type")->result();
            $data['relname'] = $this->Chithamodel->relation();
            $data['base'] = $this->config->item('base_url');
            $data['signURL'] = base_url('index.php/verification/SKController/getBaseSFile');
            $data['addhaar_consent_content'] = self::AADHAAR_CONSENT_CONTENT;
            $data['aadhaar_consent_checkbox_text'] = self::AADHAAR_CONSENT_CHECKBOX_TEXT;
            // $data['verify_check_url'] = base_url('index.php/SKController/isVerified/' . $dist_code .'/'. $subdiv_code . '/' . $circle_code . '/' . $mouza_code . '/' . $lot_no . '/' . $vill_code . '/' . $dag_no);
            $data['_view'] = 'verification/view_dag_details';
            $this->load->view('layout/layout', $data);
        } else {
            $this->session->set_flashdata('message', "Data Doesn't Exist for provided Data !!");
            redirect(base_url() . "index.php/verification/SKController/index");
        }
    }

    // public function isVerified($dist_code, $subdiv_code, $cir_code, $mouza_code, $lot_no, $village, $dag_no){
    //     $query = "select * from verified_dags where dist_code=? and subdiv_code=? and cir_code=? and mouza_pargona_code=? and lot_no=? and vill_townprt_code=? and dag_no=? and (signed_by_lm IS NOT NULL or signed_by_lm != '') and (signed_by_sk IS NULL or signed_by_sk = '')";

    //     $verified_dag = $this->db->query($query, [$dist_code, $subdiv_code, $cir_code, $mouza_code, $lot_no, $village, $dag_no])->result();

    //     $response = [
    //         'success' => true,
    //         'is_verified' => $verified_dag ? true : false
    //     ];

    //     echo json_encode($response);

    //     return ;

    // }

    public function getBaseSFile()
    {
        $dist_code = $this->input->post("dist_code");
        $subdiv_code = $this->input->post("subdiv_code");
        $cir_code = $this->input->post("cir_code");
        $mouza_pargona_code = $this->input->post("mouza_pargona_code");
        $lot_no = $this->input->post("lot_no");
        $vill_townprt_code = $this->input->post("vill_townprt_code");
        $patta_no = $this->input->post("patta_no");
        $patta_type_code = $this->input->post("patta_type_code");
        $dag_no = $this->input->post("dag_no");

        if (!isset($_POST['dist_code']) || !isset($_POST['subdiv_code']) || !isset($_POST['cir_code']) || !isset($_POST['mouza_pargona_code']) || !isset($_POST['lot_no']) || !isset($_POST['vill_townprt_code']) || !isset($_POST['patta_no']) || !isset($_POST['patta_type_code']) || !isset($_POST['dag_no']) || $_POST['dist_code'] == '' || $_POST['subdiv_code'] == '' || $_POST['cir_code'] == '' || $_POST['mouza_pargona_code'] == '' || $_POST['lot_no'] == '' || $_POST['vill_townprt_code'] == '' || $_POST['patta_no'] == '' || $_POST['patta_type_code'] == '' || $_POST['dag_no'] == '' || $_POST['accept_consent'] == '') {
            $response = [
                'status' => 'FAILED',
                'responseType' => 1,
                'msg' => 'The required parameters are empty!'
            ];
            echo json_encode($response);
            exit();
        }

        if (!$this->session->userdata('user_code') || $this->session->userdata('dist_code') != $_POST['dist_code'] || $this->session->userdata('subdiv_code') != $_POST['subdiv_code'] || $this->session->userdata('cir_code') != $_POST['cir_code']) {
            $response = [
                'status' => 'FAILED',
                'responseType' => 1,
                'msg' => 'User not authorized!'
            ];
            echo json_encode($response);
            exit();
        }

        $this->dataswitch();

        $this->db->trans_begin();

        $dist_name = $this->utilityclass->getDistrictName($dist_code);
        $subdiv_name = $this->utilityclass->getSubDivName($dist_code, $subdiv_code);
        $cir_name = $this->utilityclass->getCircleName($dist_code, $subdiv_code, $cir_code);
        $mouza_pargona_name = $this->utilityclass->getMouzaName($dist_code, $subdiv_code, $cir_code, $mouza_pargona_code);
        $lot_name = $this->utilityclass->getLotLocationName($dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no);
        $vill_townprt_name = $this->utilityclass->getVillageName($dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no, $vill_townprt_code);

        // $uuid = $this->utilityclass->getUuid($dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no, $vill_townprt_code);

        $dag_no_int = $this->db->query("SELECT dag_no_int FROM chitha_basic WHERE dist_code=? AND subdiv_code=? AND cir_code=? AND mouza_pargona_code=? AND lot_no=? AND vill_townprt_code=? AND dag_no=?", [$dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no, $vill_townprt_code, $dag_no])->row()->dag_no_int;

        $secondSelection = array('patta_code' => $patta_type_code, 'dag_no_lower' => $dag_no_int, 'dag_no_upper' => $dag_no_int);
        $data['location'] = array('dist' => trim($dist_name), 'sub' => trim($subdiv_name), 'cir' => $cir_name, 'mouza' => $mouza_pargona_name, 'lot' => $lot_name, 'vill' => $vill_townprt_name);
        $this->load->model('chitha/DharChithaModel');
        $pattatype['chithaPattatypeinfo'] = $this->DharChithaModel->getpattatype($patta_type_code);
        $chithainfo1['data'] = $this->DharChithaModel->getchithaDetailsALL($dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no, $vill_townprt_code, $dag_no_int, $dag_no_int);

        $maindataforchitha = array_merge($data, $secondSelection, $chithainfo1, $pattatype);

        $maindataforchitha['single_dag'] = '1';
        $maindataforchitha['uuid'] = $uuid = $this->db->query("select uuid from location where dist_code=? and subdiv_code=? and cir_code=? and mouza_pargona_code=? and lot_no=? and vill_townprt_code=?", [$dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no, $vill_townprt_code])->row();

        $this->load->helper('language');

        $district_code = $this->session->userdata('dist_code');
        if (in_array($district_code, BARAK_VALLEY)) {
            $this->lang->load("bengali", "bengali");
        } else {
            $this->lang->load("assamese", "assamese");
        }
        $maindataforchitha['dag_no_original'] = [];
        foreach ($maindataforchitha['data'] as $key => $value) {
            $maindataforchitha['dag_no_original'][] = $value['dag_no'];
        }

        $maindataforchitha['uuid'] = ['uuid' => $uuid->uuid];

        $content = $this->load->view('chitha_report/setChithaReport', $maindataforchitha, true);

        // echo '<pre>';
        // var_dump($content);
        // die();

        ini_set("pcre.backtrack_limit", "500000000");
        ini_set('max_execution_time', '0');
        include 'vendor/mpdf/vendor/autoload.php';
        $mpdf = new \Mpdf\Mpdf([
            'default_font_size' => 9,
            'default_font' => 'dejavusans',
            'orientation' => 'P',
            'format' => 'A4',
        ]);

        $sub_folder = $dist_code . '_' . $subdiv_code . '_' . $cir_code . '_' . $mouza_pargona_code . '_' . $lot_no . '_' . $vill_townprt_code;
        $file_name = $dist_code . '_' . $subdiv_code . '_' . $cir_code . '_' . $mouza_pargona_code . '_' . $lot_no . '_' . $vill_townprt_code . '_' . $dag_no_int;

        // mkdir(BARAK_VALLEY_CHITHA_PDF_DIR . $sub_folder, 0777, true);
        if ((!file_exists(BARAK_VALLEY_CHITHA_FRESH_PDF_DIR . $sub_folder) == true)) {
            mkdir(BARAK_VALLEY_CHITHA_FRESH_PDF_DIR . $sub_folder, 0777, true);
        }


        // $mpdf->simpleTables = true;
        // $mpdf->packTableData = true;
        $mpdf->autoScriptToLang = true;
        $mpdf->autoLangToFont = true;
        $mpdf->shrink_tables_to_fit = 1;
        $mpdf->use_kwt = true;
        $mpdf->writeHTML($content);
        // header('Content-type: application/pdf');
        ob_clean();
        // $mpdf->Output(BARAK_VALLEY_CHITHA_PDF_DIR . $sub_folder . '/' . $file_name . '.pdf', 'F');
        $mpdf->Output(BARAK_VALLEY_CHITHA_FRESH_PDF_DIR . $sub_folder . '/' . $file_name . '.pdf', 'F');

        // var_dump($content);
        // die();

        if (file_exists(BARAK_VALLEY_CHITHA_FRESH_PDF_DIR . $sub_folder . '/' . $file_name . '.pdf')) {
            $pdfData = file_get_contents(BARAK_VALLEY_CHITHA_FRESH_PDF_DIR . $sub_folder . '/' . $file_name . '.pdf');
            // $this->db->where(['dist_code'=>$dist_code, 'subdiv_code'=>$subdiv_code, 'cir_code'=>$cir_code, 'mouza_pargona_code'=>$mouza_pargona_code, 'lot_no'=>$lot_no, 'vill_townprt_code'=>$vill_townprt_code, 'dag_no'=>$dag_no]);
            $check = $this->db->query('SELECT * FROM verified_dags WHERE dist_code=? AND subdiv_code=? AND cir_code=? AND mouza_pargona_code=? AND lot_no=? AND vill_townprt_code=? AND dag_no=?', [$dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no, $vill_townprt_code, $dag_no])->row();
            if (empty($check)) {
                $consentsArr = [
                    'LM' => [],
                    'SK' => [
                        'consent_content' => self::AADHAAR_CONSENT_CONTENT,
                        'consent_checkbox_text' => self::AADHAAR_CONSENT_CHECKBOX_TEXT,
                    ],
                    'CO' => [],
                    'ADC' => [],
                    'DC' => [],
                ];
                //insert
                $insertData = [
                    'dist_code' => $dist_code,
                    'subdiv_code' => $subdiv_code,
                    'cir_code' => $cir_code,
                    'mouza_pargona_code' => $mouza_pargona_code,
                    'lot_no' => $lot_no,
                    'vill_townprt_code' => $vill_townprt_code,
                    'dag_no' => $dag_no,
                    'uuid' => $uuid->uuid,
                    'signed_by_lm' => 'NA',
                    'date_of_sign_lm' => date('Y-m-d H:i:s'),
                    'signed_doc' => ($sub_folder . '/' . $file_name . '.pdf'),
                    'consents' => json_encode($consentsArr),
                    'token' => json_encode(['LM' => '', 'SK' => '', 'CO' => '', 'ADC' => '', 'DC' => '']),
                ];
                $status = $this->db->insert('verified_dags', $insertData);

                $verified_dags_id = $this->db->insert_id();
                $this->db->where('dist_code', $dist_code)
                    ->where('subdiv_code', $subdiv_code)
                    ->where('cir_code', $cir_code)
                    ->where('mouza_pargona_code', $mouza_pargona_code)
                    ->where('lot_no', $lot_no)
                    ->where('vill_townprt_code', $vill_townprt_code)
                    ->where('dag_no', $dag_no)
                    ->where('user_desig_code', 'SK')
                    ->update('alloted_dags', ['verified_dags_id' => $verified_dags_id, 'uuid' => $uuid->uuid]);
            } else {
                //update
                $existing_consent = json_decode($check->consents);
                $existing_consent = (array) $existing_consent;
                // $existing_consent['LM'] = [];
                $updateData = [
                    // 'uuid'=>$uuid->uuid,
                    'signed_doc' => ($sub_folder . '/' . $file_name . '.pdf'),
                    'consents' => json_encode($existing_consent)
                ];
                $this->db->where(['dist_code' => $dist_code, 'subdiv_code' => $subdiv_code, 'cir_code' => $cir_code, 'mouza_pargona_code' => $mouza_pargona_code, 'lot_no' => $lot_no, 'vill_townprt_code' => $vill_townprt_code, 'dag_no' => $dag_no]);
                $status = $this->db->update('verified_dags', $updateData);
            }
            // $dynamic_file_path = $file_name . '/' . $file_name . '.pdf';

            if ($status && $this->db->affected_rows() > 0) {
                define('ESIGN_ROOT_DIRECTORY', base_url() . 'esign/');
                // $user = $this->db->query("SELECT use_name FROM loginuser_table WHERE dist_code=? AND subdiv_code=? AND cir_code=? AND mouza_pargona_code=? AND lot_no=? AND user_code=?", [$dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no, $this->session->userdata('user_code')])->row();

                // $lm_name = $this->db->query("SELECT lc.lm_name FROM loginuser_table lut  JOIN lm_code lc ON lc.dist_code = lut.dist_code 
                //                     AND lc.subdiv_code = lut.subdiv_code AND lc.cir_code = lut.cir_code AND lc.mouza_pargona_code = lut.mouza_pargona_code 
                //                     AND lc.lot_no = lut.lot_no AND lc.lm_code=lut.user_code WHERE lut.dis_enb_option = 'E' AND lc.dist_code=? AND lc.subdiv_code=? AND lc.cir_code=? 
                //                     AND lc.mouza_pargona_code=? AND lc.lot_no=?", [$dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no])->row();
                $lot_mondals = $this->db->query("SELECT lc.lm_name FROM loginuser_table lut  JOIN lm_code lc ON lc.dist_code = lut.dist_code 
                                    AND lc.subdiv_code = lut.subdiv_code AND lc.cir_code = lut.cir_code AND lc.mouza_pargona_code = lut.mouza_pargona_code 
                                    AND lc.lot_no = lut.lot_no AND lc.lm_code=lut.user_code WHERE lut.dis_enb_option = 'E' AND lc.dist_code=? AND lc.subdiv_code=? AND lc.cir_code=? 
                                    AND lc.mouza_pargona_code=? AND lc.lot_no=?", [$dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no])->result();

                $user = $this->db->query("SELECT u.username, lut.use_name FROM loginuser_table lut join users u on u.dist_code=lut.dist_code and u.subdiv_code=lut.subdiv_code and u.cir_code=lut.cir_code and u.user_code=lut.user_code WHERE lut.dist_code=? AND lut.subdiv_code=? AND lut.cir_code=? AND lut.user_code=?", [$dist_code, $subdiv_code, $cir_code, $this->session->userdata('user_code')])->row();

                if (count((array) $lot_mondals) > 0) {
                    $lm_names = [];
                    foreach ($lot_mondals as $lot_mondal) {
                        $lm_name = $lot_mondal->lm_name;
                        if ($lm_name != '') {
                            $translate = translateAssToEng($lm_name);
                            if (!$translate['success']) {
                                $this->db->trans_rollback();
                                $response = [
                                    'status' => 'FAILED',
                                    'responseType' => 1,
                                    'msg' => $translate['message']
                                ];
                                echo json_encode($response);
                                exit();
                            } else {
                                // $lm_name = $translate['message'];
                                array_push($lm_names, $translate['message']);
                            }
                        }
                    }
                    if (count($lm_names) > 0) {
                        $lm_name = implode(', ', $lm_names);
                    }
                } else {
                    $lm_name = '';
                }

                $sk_name = '';
                $translate = translateAssToEng($user->username);
                if (!$translate['success']) {
                    $this->db->trans_rollback();
                    $response = [
                        'status' => 'FAILED',
                        'responseType' => 1,
                        'msg' => $translate['message']
                    ];
                    echo json_encode($response);
                    exit();
                } else {
                    $sk_name = $translate['message'];
                }

                // log_message('error', 'LM LAST QUERY => ' . $this->db->last_query());
                // echo $this->db->last_query();
                // $this->db->trans_rollback();
                // dd(123);
                // $lm_name = $this->db->query("SELECT lm_name FROM lm_code WHERE dist_code=? AND subdiv_code=? AND cir_code=? AND mouza_pargona_code=? AND lot_no=? AND lm_code=? AND status='E'", [$dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no, $check->signed_by_lm])->row()->lm_name;

                $arr = [
                    'dist_code' => $dist_code,
                    'subdiv_code' => $subdiv_code,
                    'cir_code' => $cir_code,
                    'mouza_pargona_code' => $mouza_pargona_code,
                    'lot_no' => $lot_no,
                    'vill_townprt_code' => $vill_townprt_code,
                    'dag_no' => $dag_no,
                    'dag_no_int' => $dag_no_int,
                    'sign_users' => [
                        'lm' => [
                            'user_name' => $lm_name,
                            // 'date_of_sign' => date('Y-m-d', strtotime($check->date_of_sign_lm)),
                            // 'time_of_sign' => date('H:i:s', strtotime($check->date_of_sign_lm))
                        ],
                        'sk' => [
                            'user_name' => $sk_name,
                            'date_of_sign' => date('Y-m-d'),
                            'time_of_sign' => date('H:i:s')
                        ]
                    ],
                    'user_code' => $this->session->userdata('user_code'),
                    'user_desig_code' => $this->session->userdata('user_desig_code')
                ];
                $param = urlencode(base64_encode(openssl_encrypt(json_encode($arr), "AES-128-CTR", "singleENCRYPT", 0, "1234567893032221")));
                // $param = base64_encode(json_encode($arr));

                if ($this->db->trans_status() == FALSE) {
                    $this->db->trans_rollback();
                    $response = [
                        'status' => 'FAILED',
                        'responseType' => 1,
                        'msg' => 'Chitha pdf Generation Failed!'
                    ];
                    echo json_encode($response);
                    exit();
                }

                $this->db->trans_commit();

                $response = [
                    'status' => 'SUCCESS',
                    'responseType' => 0,
                    'msg' => 'Chitha Pdf Generated Successfully!',
                    'data' => [
                        'url' => ESIGN_ROOT_DIRECTORY . 'index.php?param=' . $param
                        // 'url'=>ESIGN_ROOT_DIRECTORY . 'index.php/' . $dist_code . '/' . $subdiv_code . '/' . $cir_code . '/' . $mouza_pargona_code . '/' . $lot_no . '/' . $vill_townprt_code . '/' . $dag_no,
                        // 'dist_code'=>$dist_code,
                        // 'subdiv_code'=>$subdiv_code,
                        // 'cir_code'=>$cir_code,
                        // 'mouza_pargona_code'=>$mouza_pargona_code,
                        // 'lot_no'=>$lot_no,
                        // 'vill_townprt_code'=>$vill_townprt_code,
                        // 'dag_no'=>$dag_no
                    ]
                ];
                echo json_encode($response);
                exit();
            } else {
                $this->db->trans_rollback();
                $response = [
                    'status' => 'FAILED',
                    'responseType' => 1,
                    'msg' => 'Chitha pdf Generation Failed!'
                ];
                echo json_encode($response);
                exit();
            }
        }

        $this->db->trans_rollback();
        $response = [
            'status' => 'FAILED',
            'responseType' => 1,
            'msg' => 'Chitha Pdf Generation Failed!'
        ];

        echo json_encode($response);
        exit();
    }

    public function viewSignedPdf()
    {
        $user_desig_code = $this->session->userdata('user_desig_code');
        $dist_code = $this->session->userdata('dcode');
        if ($user_desig_code == 'CO' || $user_desig_code == 'SK' || $user_desig_code == 'LM') {
            $subdiv_code = $this->session->userdata('subdiv_code');
            $cir_code = $this->session->userdata('cir_code');
        }
        if ($user_desig_code == 'LM') {
            $mouza_pargona_code = $this->session->userdata('mouza_pargona_code');
            $lot_no = $this->session->userdata('lot_no');
        }



        $this->dataswitch();

        if ($user_desig_code == 'DC' || $user_desig_code == 'ADC') {
            if ($dist_code == '21') {
                $villages = $this->db->query("SELECT loc_name, locname_eng, uuid, vill_townprt_code, cir_code, dist_code, subdiv_code FROM location WHERE dist_code=? AND subdiv_code!='00' AND cir_code!='00' AND mouza_pargona_code!='00' AND lot_no!='00' AND vill_townprt_code!='00000' AND status='L'", [$dist_code])->result();
            } else {
                $villages = $this->db->query("SELECT loc_name, locname_eng, uuid, vill_townprt_code, cir_code, dist_code, subdiv_code FROM location WHERE dist_code=? AND subdiv_code!='00' AND cir_code!='00' AND mouza_pargona_code!='00' AND lot_no!='00' AND vill_townprt_code!='00000'", [$dist_code])->result();
            }
        } else if ($user_desig_code == 'CO' || $user_desig_code == 'SK') {
            if ($dist_code == '21') {
                $villages = $this->db->query("SELECT loc_name, locname_eng, uuid, vill_townprt_code, cir_code, dist_code, subdiv_code FROM location WHERE dist_code=? AND subdiv_code=? AND cir_code=? AND mouza_pargona_code!='00' AND lot_no!='00' AND vill_townprt_code!='00000' AND status='L'", [$dist_code, $subdiv_code, $cir_code])->result();
            } else {
                $villages = $this->db->query("SELECT loc_name, locname_eng, uuid, vill_townprt_code, cir_code, dist_code, subdiv_code FROM location WHERE dist_code=? AND subdiv_code=? AND cir_code=? AND mouza_pargona_code!='00' AND lot_no!='00' AND vill_townprt_code!='00000'", [$dist_code, $subdiv_code, $cir_code])->result();
            }
        } else if ($user_desig_code == 'LM') {
            if ($dist_code == '21') {
                $villages = $this->db->query("SELECT loc_name, locname_eng, uuid, vill_townprt_code, cir_code, dist_code, subdiv_code FROM location WHERE dist_code=? AND subdiv_code=? AND cir_code=? AND mouza_pargona_code=? AND lot_no=? AND vill_townprt_code!='00000' AND status='L'", [$dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no])->result();
            } else {
                $villages = $this->db->query("SELECT loc_name, locname_eng, uuid, vill_townprt_code, cir_code, dist_code, subdiv_code FROM location WHERE dist_code=? AND subdiv_code=? AND cir_code=? AND mouza_pargona_code=? AND lot_no=? AND vill_townprt_code!='00000'", [$dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no])->result();
            }
        }

        if (!empty($villages)) {
            foreach ($villages as $village) {
                $village->cir_name = $this->utilityclass->getCircleName($village->dist_code, $village->subdiv_code, $village->cir_code);
            }
        }

        if (isset($_POST['uuid']) && $_POST['uuid'] != '') {
            $uuid = $this->input->post('uuid');
            $location_names = $this->db->query("SELECT dist_code, subdiv_code, cir_code, mouza_pargona_code, lot_no, vill_townprt_code FROM location WHERE uuid=?", [$uuid])->row();
        } else {
            $uuid = $villages[0]->uuid;
            $location_names = $this->db->query("SELECT dist_code, subdiv_code, cir_code, mouza_pargona_code, lot_no, vill_townprt_code FROM location WHERE uuid=?", [$uuid])->row();
        }

        $dist_name = $this->utilityclass->getDistrictName($location_names->dist_code);
        $subdiv_name = $this->utilityclass->getSubDivName($location_names->dist_code, $location_names->subdiv_code);
        $cir_name = $this->utilityclass->getCircleName($location_names->dist_code, $location_names->subdiv_code, $location_names->cir_code);
        $mouza_pargona_name = $this->utilityclass->getMouzaName($location_names->dist_code, $location_names->subdiv_code, $location_names->cir_code, $location_names->mouza_pargona_code);
        $lot_name = $this->utilityclass->getLotLocationName($location_names->dist_code, $location_names->subdiv_code, $location_names->cir_code, $location_names->mouza_pargona_code, $location_names->lot_no);
        $vill_townprt_name = $this->utilityclass->getVillageName($location_names->dist_code, $location_names->subdiv_code, $location_names->cir_code, $location_names->mouza_pargona_code, $location_names->lot_no, $location_names->vill_townprt_code);

        if ($user_desig_code == 'DC') {
            $verifiedDags = $this->db->query("SELECT id, dag_no, date_of_sign_lm, date_of_sign_sk, date_of_sign_co, date_of_sign_adc, date_of_sign_dc, signed_doc, uuid FROM verified_dags WHERE uuid=? AND (signed_by_dc IS NOT NULL AND signed_by_dc != '') AND (signed_doc IS NOT NULL AND signed_doc != '')", [$uuid])->result();
        } else if ($user_desig_code == 'ADC') {
            $verifiedDags = $this->db->query("SELECT id, dag_no, date_of_sign_lm, date_of_sign_sk, date_of_sign_co, date_of_sign_adc, date_of_sign_dc, signed_doc, uuid FROM verified_dags WHERE uuid=? AND (signed_by_adc IS NOT NULL AND signed_by_adc != '') AND (signed_doc IS NOT NULL AND signed_doc != '')", [$uuid])->result();
        } else if ($user_desig_code == 'CO') {
            $verifiedDags = $this->db->query("SELECT id, dag_no, date_of_sign_lm, date_of_sign_sk, date_of_sign_co, date_of_sign_adc, date_of_sign_dc, signed_doc, uuid FROM verified_dags WHERE uuid=? AND (signed_by_co IS NOT NULL AND signed_by_co != '') AND (signed_doc IS NOT NULL AND signed_doc != '')", [$uuid])->result();
        } else if ($user_desig_code == 'SK') {
            $verifiedDags = $this->db->query("SELECT id, dag_no, date_of_sign_lm, date_of_sign_sk, date_of_sign_co, date_of_sign_adc, date_of_sign_dc, signed_doc, uuid FROM verified_dags WHERE uuid=? AND (signed_by_sk IS NOT NULL AND signed_by_sk != '') AND (signed_doc IS NOT NULL AND signed_doc != '')", [$uuid])->result();
        } else if ($user_desig_code == 'LM') {
            $verifiedDags = $this->db->query("SELECT id, dag_no, date_of_sign_lm, date_of_sign_sk, date_of_sign_co, date_of_sign_adc, date_of_sign_dc, signed_doc, uuid FROM verified_dags WHERE uuid=? AND (signed_by_lm IS NOT NULL AND signed_by_lm != '') AND (signed_doc IS NOT NULL AND signed_doc != '')", [$uuid])->result();
        }

        $verified_dags = [];

        foreach ($verifiedDags as $verifiedDag) {
            if (file_exists(BARAK_VALLEY_CHITHA_PDF_DIR . $verifiedDag->signed_doc)) {
                $file_name_array = explode('/', $verifiedDag->signed_doc);
                $file_name = $file_name_array[count($file_name_array) - 1];
                $verifiedDag->param = $verifiedDag->uuid . '_' . $file_name;
                if ($user_desig_code == 'LM') {
                    $verifiedDag->sign_date = date('d-m-Y H:i:s', strtotime($verifiedDag->date_of_sign_lm));
                } else if ($user_desig_code == 'SK') {
                    $verifiedDag->sign_date = date('d-m-Y H:i:s', strtotime($verifiedDag->date_of_sign_sk));
                } else if ($user_desig_code == 'CO') {
                    $verifiedDag->sign_date = date('d-m-Y H:i:s', strtotime($verifiedDag->date_of_sign_co));
                } else if ($user_desig_code == 'ADC') {
                    $verifiedDag->sign_date = date('d-m-Y H:i:s', strtotime($verifiedDag->date_of_sign_adc));
                } else if ($user_desig_code == 'DC') {
                    $verifiedDag->sign_date = date('d-m-Y H:i:s', strtotime($verifiedDag->date_of_sign_dc));
                }
                $verified_dags[] = $verifiedDag;
            }
        }



        $data['villages'] = $villages;
        $data['location_names'] = 'District: ' . $dist_name . ', Sub-Divisional: ' . $subdiv_name . ', Circle: ' . $cir_name . ', Mouza: ' . $mouza_pargona_name . ', Lot: ' . $lot_name . ', Village: ' . $vill_townprt_name;
        $data['verified_dags'] = $verified_dags;

        if (isset($_POST['uuid']) && $_POST['uuid'] != '') {
            echo json_encode([
                'status' => 'SUCCESS',
                'responseType' => 2,
                'data' => $data
            ]);
            exit();
        } else {
            $data['_view'] = 'verification/sk/view_signed_doc';
            $this->load->view('layout/layout', $data);
        }
    }

    public function getSignedPdf()
    {
        $param = $this->input->get('param');
        $file_name_array = explode('_', $param);
        $uuid = $file_name_array[0];
        unset($file_name_array[0]);
        $file_name = implode('_', $file_name_array);

        $this->dataswitch();
        $location = $this->db->query("SELECT * FROM location WHERE uuid=?", [$uuid])->row();
        $folder = $location->dist_code . '_' . $location->subdiv_code . '_' . $location->cir_code . '_' . $location->mouza_pargona_code . '_' . $location->lot_no . '_' . $location->vill_townprt_code;

        if (file_exists(BARAK_VALLEY_CHITHA_PDF_DIR . $folder . '/' . $file_name)) {
            $file_path = BARAK_VALLEY_CHITHA_PDF_DIR . $folder . '/' . $file_name;
            $content_type = 'application/pdf';

            header('Content-Type: ' . $content_type);
            header('Content-Length: ' . filesize($file_path));
            ob_clean();
            echo file_get_contents($file_path);
        }
    }

    public function verificationCertificate()
    {
        $dist_code = $this->session->userdata('dcode');
        $subdiv_code = $this->session->userdata('subdiv_code');
        $cir_code = $this->session->userdata('cir_code');
        $user_code = $this->session->userdata('user_code');

        $this->dataswitch();

        $data = $this->getVerificationCertificateData();
        $validationStatus = $this->VerificationModel->isCertificateReadyToEsign($data['villages']);
        $data['validationStatus'] = $validationStatus;

        $chitha_verification_certificate = $this->db->where('dist_code', $dist_code)
            ->where('subdiv_code', $subdiv_code)
            ->where('cir_code', $cir_code)
            ->where('mouza_pargona_code', '00')
            ->where('lot_no', '00')
            ->where('user_desig_code', 'SK')
            ->where('user_code', $user_code)
            ->get('chitha_verification_certificates')
            ->row();

        $data['chitha_verification_certificate'] = null;

        if ($chitha_verification_certificate) {
            if (!$chitha_verification_certificate->signed_by || !$chitha_verification_certificate->signed_file_name) {
                $this->db->where('id', $chitha_verification_certificate->id)->delete('chitha_verification_certificates');
                unlink(VERIFICATION_CERTICATE_ESIGN_PATH . $chitha_verification_certificate->file_name);
            } else {
                $data['chitha_verification_certificate'] = $chitha_verification_certificate;
            }
        }

        $data['addhaar_consent_content'] = self::AADHAAR_CONSENT_CONTENT;
        $data['aadhaar_consent_checkbox_text'] = self::AADHAAR_CONSENT_CHECKBOX_TEXT;
        $data['_view'] = 'verification/sk/certificate';

        $this->load->view('layout/layout', $data);
    }

    public function eSignInit()
    {
        $dist_code = $this->session->userdata('dcode');
        $subdiv_code = $this->session->userdata('subdiv_code');
        $cir_code = $this->session->userdata('cir_code');
        $mouza_pargona_code = $this->session->userdata('mouza_pargona_code');
        $user_code = $this->session->userdata('user_code');
        $lot_no = '00';

        $this->dataswitch();

        $user = $this->db->query("SELECT u.username, lut.use_name FROM loginuser_table lut join users u on u.dist_code=lut.dist_code and u.subdiv_code=lut.subdiv_code and u.cir_code=lut.cir_code and u.user_code=lut.user_code WHERE lut.dist_code=? AND lut.subdiv_code=? AND lut.cir_code=? AND lut.user_code=?", [$dist_code, $subdiv_code, $cir_code, $this->session->userdata('user_code')])->row();

        $sk_name = '';
        $translate = translateAssToEng($user->username);
        if (!$translate['success']) {
            $response = [
                'status' => 'FAILED',
                'responseType' => 1,
                'msg' => $translate['message']
            ];
            echo json_encode($response);
            exit();
        } else {
            $sk_name = $translate['message'];
        }

        $check_chitha_verification_certificate = $this->db->where('dist_code', $dist_code)
            ->where('subdiv_code', $subdiv_code)
            ->where('cir_code', $cir_code)
            ->where('mouza_pargona_code', $mouza_pargona_code)
            ->where('lot_no', '00')
            ->where('user_desig_code', 'SK')
            ->where('user_code', $user_code)
            ->get('chitha_verification_certificates')
            ->row();

        if ($check_chitha_verification_certificate) {
            if ($check_chitha_verification_certificate->signed_file_name) {
                $response = [
                    'status' => 'FAILED',
                    'responseType' => 1,
                    'msg' => 'Certificate has already been signed'
                ];

                echo json_encode($response);
                return;
            }

            $file_name = $check_chitha_verification_certificate->file_name;
        } else {
            if ((!file_exists(VERIFICATION_CERTICATE_ESIGN_PATH) == true)) {
                mkdir(VERIFICATION_CERTICATE_ESIGN_PATH, 0777, true);
            }

            $this->db->trans_begin();

            $file_name = $dist_code . '_' . $subdiv_code . '_' . $cir_code . '_' . $mouza_pargona_code . '_SK_' . uniqid() . '.pdf';

            $data = $this->getVerificationCertificateData();
            $validationStatus = $this->VerificationModel->isCertificateReadyToEsign($data['villages']);
            if (!$validationStatus['success']) {
                $response = [
                    'status' => 'FAILED',
                    'responseType' => 1,
                    'msg' => $validationStatus['message']
                ];
                echo json_encode($response);
                exit();
            }

            $this->load->helper('language');

            $html = $this->load->view('verification/sk/certificate-partials', $data, TRUE);

            ini_set("pcre.backtrack_limit", "500000000");
            ini_set('max_execution_time', '0');
            include 'vendor/mpdf/vendor/autoload.php';

            $mpdf = new \Mpdf\Mpdf([
                'default_font_size' => 11,
                'default_font' => 'dejavusans',
                'orientation' => 'P',
                'format' => 'A4',
            ]);

            $mpdf->autoScriptToLang = true;
            $mpdf->autoLangToFont = true;
            $mpdf->shrink_tables_to_fit = 1;
            $mpdf->use_kwt = true;

            $mpdf->WriteHTML($html);

            // Or save to a file
            $mpdf->Output(VERIFICATION_CERTICATE_ESIGN_PATH . $file_name, \Mpdf\Output\Destination::FILE);

            $consentsArr = [
                'consent_content' => self::AADHAAR_CONSENT_CONTENT,
                'consent_checkbox_text' => self::AADHAAR_CONSENT_CHECKBOX_TEXT,
            ];

            $data = [
                'dist_code' => $dist_code,
                'subdiv_code' => $subdiv_code,
                'cir_code' => $cir_code,
                'mouza_pargona_code' => $mouza_pargona_code,
                'lot_no' => $lot_no,
                'user_desig_code' => 'SK',
                'user_code' => $user_code,
                'file_name' => $file_name,
                'consents' => json_encode($consentsArr),
                'created_at' => date('Y-m-d H:i:s'),
                'updated_at' => date('Y-m-d H:i:s')
            ];
            // chitha_verification_certificates
            $status = $this->db->insert('chitha_verification_certificates', $data);
            if ($status) {
                $this->db->trans_commit();
            } else {
                $this->db->trans_rollback();
                log_message('error', '#ERRVERCERT0002: Last Query => ' . $this->db->last_query());
                $response = [
                    'status' => 'FAILED',
                    'responseType' => 1,
                    'msg' => '#ERRVERCERT0002: Something went wrong. Please try again later.'
                ];
                echo json_encode($response);
                exit();
            }
        }

        define('ESIGN_ROOT_DIRECTORY', base_url() . 'esign/');

        // $user = $this->db->query("SELECT u.username, lut.use_name FROM loginuser_table lut join users u on u.dist_code=lut.dist_code and u.subdiv_code=lut.subdiv_code and u.cir_code=lut.cir_code and u.user_code=lut.user_code WHERE lut.dist_code=? AND lut.subdiv_code=? AND lut.cir_code=? AND lut.user_code=?", [$dist_code, $subdiv_code, $cir_code, $this->session->userdata('user_code')])->row();

        $arr = [
            'dist_code' => $dist_code,
            'subdiv_code' => $subdiv_code,
            'cir_code' => $cir_code,
            'mouza_pargona_code' => $mouza_pargona_code,
            'lot_no' => '00',
            'sign_users' => [
                'sk' => [
                    'user_name' => $sk_name,
                    'date_of_sign' => date('Y-m-d'),
                    'time_of_sign' => date('H:i:s')
                ]
            ],
            'file_name' => $file_name,
            'user_code' => $this->session->userdata('user_code'),
            'user_desig_code' => $this->session->userdata('user_desig_code'),
            'redirect' => 'verification/SKController/verificationCertificate',
            'is_final' => '0'
        ];
        $param = urlencode(base64_encode(openssl_encrypt(json_encode($arr), "AES-128-CTR", "singleENCRYPT", 0, "1234567893032221")));

        $response = [
            'status' => 'SUCCESS',
            'responseType' => 0,
            'msg' => 'Verification certificate is ready to sign',
            'data' => [
                'url' => ESIGN_ROOT_DIRECTORY . 'verify_chitha_certificate/index.php?param=' . $param
                // 'dist_code'=>$dist_code,
                // 'subdiv_code'=>$subdiv_code,
                // 'cir_code'=>$cir_code,
                // 'mouza_pargona_code'=>$mouza_pargona_code,
                // 'lot_no'=>$lot_no,
                // 'vill_townprt_code'=>$vill_townprt_code,
            ]
        ];
        echo json_encode($response);
        exit();
    }

    protected function getVerificationCertificateData()
    {
        $this->load->model('verification/VerificationModel');
        $dist_code = $this->session->userdata('dcode');
        $subdiv_code = $this->session->userdata('subdiv_code');
        $cir_code = $this->session->userdata('cir_code');

        $district = $this->db->query("SELECT loc_name, locname_eng FROM location WHERE dist_code=? AND subdiv_code=?", [$dist_code, '00'])->row();
        $dist_name = $district->loc_name . ' (' . $district->locname_eng . ')';
        $data['dist_name'] = $dist_name;

        $circle = $this->db->query("SELECT loc_name, locname_eng FROM location WHERE dist_code=? AND subdiv_code=? AND cir_code=? AND mouza_pargona_code=?", [$dist_code, $subdiv_code, $cir_code, '00'])->row();
        $circle_name = $circle->loc_name . ' (' . $circle->locname_eng . ')';
        $data['circle_name'] = $circle_name;

        $user_code = $this->session->userdata('usercode');
        $data['sk_name'] = $this->db->query("SELECT username FROM users WHERE dist_code=? AND subdiv_code=? AND cir_code=? AND user_code=?", [$dist_code, $subdiv_code, $cir_code, $user_code])->row()->username;

        $villages = $this->VerificationModel->getVillages();
        $data['villages'] = $villages;

        return $data;
    }

    public function dagAreaEdit()
    {

        if (!isset($_POST['dist_code']) || $_POST['dist_code'] == '' || !isset($_POST['subdiv_code']) || $_POST['subdiv_code'] == '' || !isset($_POST['cir_code']) || $_POST['cir_code'] == '' || !isset($_POST['mouza_pargona_code']) || $_POST['mouza_pargona_code'] == '' || !isset($_POST['lot_no']) || $_POST['lot_no'] == '' || !isset($_POST['vill_townprt_code']) || $_POST['vill_townprt_code'] == '' || !isset($_POST['dag_no']) || $_POST['dag_no'] == '' || !isset($_POST['patta_no']) || $_POST['patta_no'] == '' || !isset($_POST['patta_type_code']) || $_POST['patta_type_code'] == '') {
            echo json_encode([
                'status' => 'FAILED',
                'responseType' => 1,
                'msg' => 'Input Parameters are empty'
            ]);
            exit();
        }
        $dist_code = $this->input->post('dist_code');
        $subdiv_code = $this->input->post('subdiv_code');
        $cir_code = $this->input->post('cir_code');
        $mouza_pargona_code = $this->input->post('mouza_pargona_code');
        $lot_no = $this->input->post('lot_no');
        $vill_townprt_code = $this->input->post('vill_townprt_code');
        $dag_no = $this->input->post('dag_no');
        $patta_no = $this->input->post('patta_no');
        $patta_type_code = $this->input->post('patta_type_code');
        $chitha_bigha = $this->input->post('chitha_bigha');
        $chitha_katha = $this->input->post('chitha_katha');
        $chitha_lessa = $this->input->post('chitha_lessa');
        // $chitha_ganda = $this->input->post('chitha_ganda');

        $this->dataswitch();
        $this->db->trans_begin();

        $updateArr = [
            'dag_area_b' => $chitha_bigha,
            'dag_area_k' => $chitha_katha,
            'dag_area_lc' => $chitha_lessa
            // 'dag_area_g'=>$chitha_ganda
        ];
        $this->db->where([
            'dist_code' => $dist_code,
            'subdiv_code' => $subdiv_code,
            'cir_code' => $cir_code,
            'mouza_pargona_code' => $mouza_pargona_code,
            'lot_no' => $lot_no,
            'vill_townprt_code' => $vill_townprt_code,
            'dag_no' => $dag_no,
            'patta_no' => $patta_no,
            'patta_type_code' => $patta_type_code
        ]);
        $status = $this->db->update('chitha_basic', $updateArr);

        if (!$status || $this->db->affected_rows() < 1) {
            $this->db->trans_rollback();
            echo json_encode([
                'status' => 'FAILED',
                'responseType' => 1,
                'msg' => 'Failed to update'
            ]);
            exit();
        }

        $chitha_basic = $this->db->query("SELECT dag_area_b, dag_area_k, dag_area_lc, dag_area_g FROM chitha_basic WHERE dist_code=? AND subdiv_code=? AND cir_code=? AND mouza_pargona_code=? AND lot_no=? AND vill_townprt_code=? AND dag_no=? AND patta_no=? AND patta_type_code=?", [$dist_code, $subdiv_code, $cir_code, $mouza_pargona_code, $lot_no, $vill_townprt_code, $dag_no, $patta_no, $patta_type_code])->row();



        if ($this->db->trans_status() == FALSE) {
            $this->db->trans_rollback();
            echo json_encode([
                'status' => 'FAILED',
                'responseType' => 1,
                'msg' => 'Transaction Failed'
            ]);
            exit();
        }

        $this->db->trans_commit();

        echo json_encode([
            'status' => 'SUCCESS',
            'responseType' => 2,
            'msg' => 'Dag Area Successfully Updated',
            'data' => $chitha_basic
        ]);
        exit();
    }
}
